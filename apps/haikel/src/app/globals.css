@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply m-0 h-[50vh];
    font-family: var(--font-ibm-serif);
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-ibm-sans);
  }

  .prose pre,
  pre code {
    font-family: var(--font-ibm-mono);
  }

  button {
    @apply outline-none;
  }
}

@layer components {
  /* 
   * So, i divide the gradient styles for text into 2 parts, light mode and dark mode. 
   * Why? Because i want to prevent issue "You cannot `@apply` the `dark:bg-green-700` utility here because it creates a circular dependency"
   */

  /* light mode */
  .gradient {
    @apply bg-gradient-to-r from-pink-500 to-blue-500 bg-clip-text text-transparent;
  }

  /* dark mode */
  .gradient-dark {
    @apply bg-gradient-to-r from-blue-500 to-[#80D0C7] bg-clip-text text-transparent;
  }

  .shadow-smooth {
    box-shadow: 0px 0px 40px -23px rgba(0, 0, 0, 1);
    -webkit-box-shadow: 0px 0px 40px -23px rgba(0, 0, 0, 1);
    -moz-box-shadow: 0px 0px 40px -23px rgba(0, 0, 0, 1);
  }
}

@layer utilities {
  .prose img {
    @apply w-full rounded-sm;
  }

  .prose video {
    @apply rounded-sm shadow-md dark:shadow-gray-900;
  }

  .prose h1 > a::before,
  .prose h2 > a::before,
  .prose h3 > a::before,
  .prose h4 > a::before,
  .prose h5 > a::before,
  .prose h6 > a::before {
    @apply mr-2 text-[#3B82F6];
  }

  .prose h1 > a::before {
    @apply hover:content-['#'];
  }

  .prose h2 > a::before {
    @apply hover:content-['##'];
  }

  .prose h3 > a::before {
    @apply hover:content-['###'];
  }

  .prose h4 > a::before {
    @apply hover:content-['####'];
  }

  .prose h5 > a::before {
    @apply hover:content-['#####'];
  }

  .prose h6 > a::before {
    @apply hover:content-['######'];
  }
}

/* Switch Theme Button animation configuration */
@keyframes nav {
  from {
    transform: translateY(-50px);
    opacity: 0;
  }

  to {
    transform: translateY(0px);
    opacity: 100;
  }
}

.switch-theme-nav {
  animation-name: nav;
  animation-duration: 0.3s;
  animation-timing-function: ease;
}

@keyframes sakura {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.spin-sakura {
  animation-name: sakura;
  animation-duration: 13000ms;
  animation-timing-function: cubic-bezier(1, 1, 1, 1);
  animation-iteration-count: infinite;
}
