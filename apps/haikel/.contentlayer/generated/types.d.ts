// NOTE This file is auto-generated by Contentlayer
import type { ImageFieldData, IsoDateTimeString, MDX, Markdown } from "contentlayer/core";
import * as Local from "contentlayer/source-files";

export { isType } from "contentlayer/client";

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString };

/** Document types */
export type Notes = {
  /** File path relative to `contentDirPath` */
  _id: string;
  _raw: Local.RawDocumentData;
  type: "Notes";
  /** Author's name of the note */
  author: string;
  /** Title of the note */
  title: string;
  /** Tags of the note */
  tags: string[];
  /** Date of the note */
  date: IsoDateTimeString;
  /** Description of the note */
  description: string;
  /** MDX file body */
  body: MDX;
  slug: string;
};

export type Works = {
  /** File path relative to `contentDirPath` */
  _id: string;
  _raw: Local.RawDocumentData;
  type: "Works";
  /** Id of the work */
  id: number;
  /** Author of the work */
  author: string;
  /** Title of the work */
  title: string;
  /** Stack of the work */
  stack: string[];
  /** Description of the work */
  description: string;
  /** Preview of the work */
  preview?: string | undefined;
  /** Repo of the work */
  repo?: string | undefined;
  /** MDX file body */
  body: MDX;
  slug: string;
};

/** Nested types */

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes;
export type AllTypeNames = DocumentTypeNames | NestedTypeNames;

export type DocumentTypes = Notes | Works;
export type DocumentTypeNames = "Notes" | "Works";

export type NestedTypes = never;
export type NestedTypeNames = never;

export type DataExports = {
  allDocuments: DocumentTypes[];
  allNotes: Notes[];
  allWorks: Works[];
};

export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes;
  documentTypeMap: DocumentTypeMap;
  documentTypeNames: DocumentTypeNames;
  nestedTypes: NestedTypes;
  nestedTypeMap: NestedTypeMap;
  nestedTypeNames: NestedTypeNames;
  allTypeNames: AllTypeNames;
  dataExports: DataExports;
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Notes: Notes;
  Works: Works;
};

export type NestedTypeMap = {};
